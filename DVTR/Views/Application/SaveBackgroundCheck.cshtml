@model DVTR.DVTR.DAL.BackgroundCheck

@{
    ViewBag.Title = "BackgroundCheck";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>BackgroundCheck</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="col-md-4">Convictions</label>
            <div class="col-md-8">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Convictions)
                    @Html.ValidationMessageFor(model => model.Convictions, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-4">Criminal record</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.CriminalRecord, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CriminalRecord, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-4">Ccma case</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.CcmaCase, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CcmaCase, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-4">Fraud case</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.FraudCase, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FraudCase, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-4">Credit record</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.CreditRecord, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreditRecord, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-4">Other</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.Other, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Other, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.PersonId, "PersonId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("PersonId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PersonId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Next" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-md-4"></div>
    <div class="col-md-8">
        <div class="col-md-12 space"><a onclick="javascript:history.go(-1)" href="/"><< Back to List</a></div>
    </div>
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
