@model DVTR.DVTR.DAL.ApplicantInfo

@{
    ViewBag.Title = "ApplicantInfo";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ApplicantInfo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="col-md-4">Work permit number</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.WorkPermitNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WorkPermitNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-4">Work permit end date</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.WorkPermitEndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WorkPermitEndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-4">Health</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.Health, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Health, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-4">Driver's license</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.DriversLicense, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DriversLicense, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-4">Own transport</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.OwnTransport, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OwnTransport, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-4">Other languages</label>
            <div class="col-md-8">
                @Html.DropDownList("languages", new SelectList(Enum.GetValues(typeof(DVTR.Models.EnumClass.languages))), "Select Language", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OtherLaguages, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <label class="col-md-4">Current work location</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.CurrentWorkLocation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentWorkLocation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-4">Current job tittle</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.CurrentJobTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentJobTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-4">Preffered job tittle</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.PreferredJobTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PreferredJobTitle, "", new { @class = "text-danger" })
            </div>
        </div>
        @{
            var jhbSouth = Model.PrefJhbSouth != null ? (object)new { @checked = "checked" } : (object)new { };
            var jhbNorth = Model.PrefJhbNorth != null ? (object)new { @checked = "checked" } : (object)new { };
            //var jhbSouth = Model.PrefJhbSouth != null ? (object)new { @checked = "checked" } : (object)new { };
           // var jhbSouth = Model.PrefJhbSouth != null ? (object)new { @checked = "checked" } : (object)new { };
           // var jhbSouth = Model.PrefJhbSouth != null ? (object)new { @checked = "checked" } : (object)new { };

        }

        <div class="row">
            <label class="col-md-12">Preffered work location:</label>
        </div>
        <div class="form-group">
            <label class="col-md-4">JHB CBD</label>
            <div class="col-md-4">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.PrefJhbCbd.HasValue, new { id = "employmentType_" })
                    @Html.ValidationMessageFor(model => model.PrefJhbCbd, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>



        <div class="form-group">
            <label class="col-md-4">JHB North</label>
            <div class="col-md-4">
                <div class="checkbox">
                    @Html.CheckBox("PrefJhbNorth", jhbNorth)
                    @Html.ValidationMessageFor(model => model.PrefJhbNorth, "", new { @class = "text-danger" })
                </div>
            </div>
            </div>
        

        <div class="form-group">
            <label class="col-md-4">JHB South</label>
            <div class="col-md-4">
                <div class="checkbox">
                    @*<input type="checkbox" value="@Model.PrefJhbSouth" id="employmentType_" , name="MyTestJhb" />*@
                   
                    @Html.CheckBox("PrefJhbSouth",jhbSouth)
                    @Html.ValidationMessageFor(model => model.PrefJhbSouth, "", new { @class = "text-danger" })

                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-4">JHB West</label>
            <div class="col-md-4">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.PrefJhbWest.HasValue, new { id = "employmentType_" })
                    @Html.ValidationMessageFor(model => model.PrefJhbWest, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-4">Midrand</label>
            <div class="col-md-4">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.PrefMidrand.HasValue, new { id = "employmentType_" })
                    @Html.ValidationMessageFor(model => model.PrefMidrand, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-4">Pretoria</label>    
            <div class="col-md-4">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.PrefPretoria.HasValue , new { id = "employmentType_" ,name= "PrefJhbSouth" })
                    @Html.ValidationMessageFor(model => model.PrefPretoria, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group row">
            <label class="col-md-10">Willing to relocate within RSA?</label>
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.RelocateRsa)
                    @Html.ValidationMessageFor(model => model.RelocateRsa, "", new { @class = "text-danger" })
                </div>.
            </div>
        </div>

        <div class="form-group row">
            <label class="col-md-10">Will you consider relocation to the UK, Singapore or the Middle East for long term assignments (2 years and longer)</label>
            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.RelocateInternational)
                    @Html.ValidationMessageFor(model => model.RelocateInternational, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Next" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-md-4"></div>
    <div class="col-md-8">
        <div class="col-md-12 space"><a onclick="javascript:history.go(-1)" href="/"><< Back to List</a></div>
    </div>
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>