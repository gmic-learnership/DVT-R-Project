@model DVTR.DVTR.DAL.Education

@{
    ViewBag.Title = "Education";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <input id="addMoreFlag" name="addMoreFlag" type="hidden" />
    

    <div class="form-horizontal">
        <h4>Education</h4>
        <hr />
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <label class="col-md-4">Type</label>
            <div class="col-md-8">
                <select class = "form-control" name="EducationType">
                    <option>Matric</option>
                    <option >Tertiary</option>
                </select>
              
                @Html.ValidationMessageFor(model => model.EducationType, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            <label class="col-md-4">Education</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.EducationType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EducationType, "", new { @class = "text-danger" })
            </div>
        </div>*@        

        <div class="form-group">
            <label class="col-md-4">Institution</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.Institution, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Institution, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-4">Year completed</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.YearCompleted, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YearCompleted, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.PersonId, "PersonId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("PersonId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PersonId, "", new { @class = "text-danger" })
                </div>
            </div>*@
        

      
    </div>
    <div class="form-horizontal">

        @if (Model.MyEducationList.Count > 0)
        {
        <div class="form-group">
            <div class="row text-danger">
                <div class="col-md-6">
                    Education
                </div>
                <div class="col-md-6 text-danger">
                    Institution
                </div>
            </div>
            @foreach (var item in Model.MyEducationList)
            {
            <div class="row">
                <div class="col-md-6">
                    @item.EducationType
                </div>
                <div class="col-md-6">
                    @item.Institution
                </div>
            </div>
            }
        </div>
        
        }


        <div class="form-group">
           
            <div class="col-md-offset-2 col-md-11">
                <input type="submit" value="Add Additional" class="btn btn-default" onclick="AddMore();"/>
                <input type="submit" value="Next" class="btn btn-default" />
            </div>
            

           
        </div>
        </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
<script type="text/javascript" >
    function AddMore()
    {
        document.getElementById("addMoreFlag").value = "1";
    }

</script>